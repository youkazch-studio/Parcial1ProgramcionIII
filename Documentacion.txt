

Integrantes: 

Cantarero Arias, Melissa Abigail SMSS136723
Zelaya Chavez, Kevin Alejandro SMIS091121



Ejercicio 1:
Este programa organiza las citas de cada paciente en un consultorio, en este se utilizaron dos clases para representar 
los datos de los pacientes y el segundo para asignar un doctor o doctora a cada paciente, la solucion que encontramos 
para este probelma fue, que si un paciente llegaba al consultorio se le creaba una cita y se le asignaba un doctor en 
especifico, pero si este paciente ya tenia una cita anteriormente, no era necesario tomarle de nuevo los datos, ya que 
ya estaba registrado, a este paciente se le redirigia a la sala de espera asi facilitar y agilizar el proceso.

Ejercicio 2: 
Es este programa se prioriza mostrar la fecha de devolucion de un libro de una biblioteca para que el lector no 
sobrepase la fecha limite de entrega de el libro que se le presto, utiliza tres clases el primero es llamada Lector 
que es para definir los datos del lector como el nombre, la tarjerta, la segunda clase llamada libro, es para registrar 
el nombre del libro que se llevo el lector, la fecha en la que se lo llevo y la devolucion, el tercero es biblioteca 
es para getsionar los prestamos y devoluciones, el resultado final, muestra el nombre del lector, el nombre del libro 
que presto y la fecha que se presto, asi mismo la fecha estipulada para su devolucion respectiva 

Ejercicio 3:

El programa utiliza Programación Orientada a Objetos (POO) para representar entidades clave como Habitacion, Cliente, Factura, y Recepcionista. 
Esto permite modularidad, reutilización de código, y facilidad de mantenimiento. Las funciones organizan el código y encapsulan comportamientos 
específicos, facilitando su uso y comprensión. Se utilizan colecciones de datos (listas) para manejar múltiples elementos como habitaciones y servicios 
extras, y estructuras de control (bucles for y while) para gestionar el flujo de ejecución y la interacción con el cliente. 
Estas decisiones permiten un código claro, organizado y eficiente.


Ejercicio 4:


El programa utiliza Programación Orientada a Objetos (POO) para modelar las entidades principales, como vehículos y clientes, 
permitiendo una estructura clara y escalable. Las funciones se emplean para modularizar el código, haciéndolo más organizado y fácil de mantener. 
Se usaron estructuras de control (como condicionales) para gestionar el flujo del programa, asegurando que las operaciones se realicen 
correctamente. Además, se utilizó una lista para manejar los vehículos disponibles, permitiendo una gestión dinámica de los datos. 
La combinación de estas técnicas ofrece un código robusto, reutilizable y fácil de extender.
